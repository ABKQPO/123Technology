dependencies {
    // implementation
    implementation 'com.github.GTNewHorizons:GT5-Unofficial:5.09.51.464:dev'
    implementation 'com.github.GTNewHorizons:NewHorizonsCoreMod:2.7.258:dev'
    implementation 'com.github.GTNewHorizons:Mobs-Info:0.5.4-GTNH:dev'
    implementation 'com.github.GTNewHorizons:Infernal-Mobs:1.10.3-GTNH:dev'
    implementation 'com.github.GTNewHorizons:Galaxy-Space-GTNH:1.1.121-GTNH:dev'
    implementation 'com.github.GTNewHorizons:SGCraft:1.4.5-GTNH:dev'
    implementation 'com.github.GTNewHorizons:twilightforest:2.7.13:dev'
    implementation 'com.github.GTNewHorizons:Angelica:1.0.0-beta56:dev'
    implementation 'com.github.GTNewHorizons:AE2FluidCraft-Rework:1.4.114-gtnh:dev'
    implementation 'com.github.GTNewHorizons:ae2stuff:0.9.7-GTNH:dev'
    implementation 'com.github.GTNewHorizons:Avaritia:1.75:dev'
    implementation 'com.github.GTNewHorizons:Avaritiaddons:1.9.1-GTNH:dev'
    implementation 'com.github.GTNewHorizons:neiaddons:1.17.0:dev'
    implementation 'com.github.GTNewHorizons:Binnie:2.5.21:dev'
    implementation 'com.github.GTNewHorizons:BloodMagic:1.7.51:dev'
    implementation 'com.github.GTNewHorizons:Botania:1.12.25-GTNH:dev'
    implementation 'com.github.GTNewHorizons:Draconic-Evolution:1.4.27-GTNH:dev'
    implementation 'com.github.GTNewHorizons:EnderIO:2.9.23:dev'
    implementation 'com.github.GTNewHorizons:Eternal-Singularity:1.2.1:dev'
    implementation 'com.github.GTNewHorizons:ForestryMC:4.10.17:dev'
    implementation 'com.github.GTNewHorizons:MagicBees:2.9.4-GTNH:dev'
    implementation 'com.github.GTNewHorizons:NotEnoughItems:2.7.90-GTNH:dev'
    implementation 'com.github.GTNewHorizons:OpenComputers:1.11.19-GTNH:dev'
    implementation 'com.github.GTNewHorizons:supersolarpanels:1.1.4:dev'
    implementation 'com.github.GTNewHorizons:ThaumicEnergistics:1.7.14-GTNH:dev'
    implementation 'com.github.GTNewHorizons:Universal-Singularities:8.10.0:dev'
    implementation 'com.github.GTNewHorizons:WitcheryExtras:1.3.6:dev'

    // external
    implementation 'thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev'
    implementation 'com.github.GTNewHorizons:worldedit-gtnh:v0.0.8:dev'

    // runtimeOnly
    runtimeOnly 'com.github.GTNewHorizons:BetterP2P:1.3.2:dev'
    runtimeOnly 'com.github.GTNewHorizons:Chisel:2.16.13-GTNH:dev'
    runtimeOnly 'com.github.GTNewHorizons:StructureLib:1.4.23:dev'
    runtimeOnly('com.github.GTNewHorizons:BlockRenderer6343:1.3.16:dev') { transitive = false }

    implementation('com.google.auto.value:auto-value-annotations:1.10.1')
    annotationProcessor('com.google.auto.value:auto-value:1.10.1')
}

/*
dependencies {
    implementation(gtnhDev("GT5-Unofficial"))
    implementation(gtnhDev("NewHorizonsCoreMod"))
    implementation(gtnhDev("Mobs-Info"))
    implementation(gtnhDev("Infernal-Mobs"))
    implementation(gtnhDev("Galaxy-Space-GTNH"))
    implementation(gtnhDev("SGCraft"))
    implementation(gtnhDev("twilightforest"))
    implementation(gtnhDev("Angelica"))
    implementation(gtnhDev("AE2FluidCraft-Rework"))
    implementation(gtnhDev("ae2stuff"))
    implementation(gtnhDev("Avaritia"))
    implementation(gtnhDev("Avaritiaddons"))
    implementation(gtnhDev("neiaddons"))
    implementation(gtnhDev("Binnie"))
    implementation(gtnhDev("BloodMagic"))
    implementation(gtnhDev("Botania"))
    implementation(gtnhDev("Draconic-Evolution"))
    implementation(gtnhDev("EnderIO"))
    implementation(gtnhDev("Eternal-Singularity"))
    implementation(gtnhDev("ForestryMC"))
    implementation(gtnhDev("MagicBees"))
    implementation(gtnhDev("NotEnoughItems"))
    implementation(gtnhDev("OpenComputers"))
    implementation(gtnhDev("supersolarpanels"))
    implementation(gtnhDev("ThaumicEnergistics"))
    implementation(gtnhDev("Universal-Singularities"))
    implementation(gtnhDev("WitcheryExtras"))

    implementation('thaumcraft:Thaumcraft:1.7.10-4.2.3.5a:dev')
    implementation('com.github.GTNewHorizons:worldedit-gtnh:v0.0.8:dev')

    // runtime
    runtimeOnlyNonPublishable(gtnhDev("BetterP2P"))
    runtimeOnlyNonPublishable(gtnhDev("Chisel"))
    runtimeOnlyNonPublishable(gtnhDev("StructureLib"))
    runtimeOnlyNonPublishable(gtnhDev("BlockRenderer6343")) { transitive = false }

    annotationProcessor('com.google.auto.value:auto-value:1.10.1')
    implementation('com.google.auto.value:auto-value-annotations:1.10.1')


    configurations.configureEach {
        exclude group: 'com.github.GTNewHorizons', module: 'Baubles'
    }

}

@SuppressWarnings('GrMethodMayBeStatic')
String gtnhDev(String name, String classifier = "dev") {
    return elytraModpackVersion.gtnh(name, classifier)
}
 */

// 移动到了下方 给不会的人查看
/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *
 *  - compile("g:n:v:c"): deprecated, replace with "api" (works like the old "compile") or "implementation" (can be more efficient)
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.0.1/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */

/// 未使用插件前声明的依赖
/*implementation('com.github.GTNewHorizons:GT5-Unofficial:5.09.51.449:dev')
implementation("com.github.GTNewHorizons:Mobs-Info:0.5.3-GTNH:dev") { transitive = false }
implementation("com.github.GTNewHorizons:Infernal-Mobs:1.10.2-GTNH:dev")
implementation("com.github.GTNewHorizons:Galaxy-Space-GTNH:1.1.116-GTNH:dev")
 implementation('com.github.GTNewHorizons:SGCraft:1.4.5-GTNH:dev')
implementation('com.github.GTNewHorizons:twilightforest:2.7.8:dev')
implementation('com.github.GTNewHorizons:amunra:0.8.2:dev')
implementation('com.github.GTNewHorizons:Angelica:1.0.0-beta53:dev')
implementation('com.github.GTNewHorizons:AE2FluidCraft-Rework:1.4.106-gtnh:dev')
implementation('com.github.GTNewHorizons:ae2stuff:0.9.6-GTNH:dev')
implementation('com.github.GTNewHorizons:Avaritia:1.70:dev')
implementation('com.github.GTNewHorizons:Avaritiaddons:1.9.0-GTNH:dev')
implementation('com.github.GTNewHorizons:neiaddons:1.16.0:dev')
implementation('com.github.GTNewHorizons:NotEnoughCharacters:1.7.10-1.5.4-GTNH:dev')
implementation('com.github.GTNewHorizons:Binnie:2.5.16:dev')
implementation('com.github.GTNewHorizons:BloodMagic:1.7.48:dev')
implementation('com.github.GTNewHorizons:Botania:1.12.21-GTNH:dev')
implementation('com.github.GTNewHorizons:Draconic-Evolution:1.4.24-GTNH:dev')
implementation('com.github.GTNewHorizons:EnderIO:2.9.22:dev')
implementation('com.github.GTNewHorizons:Eternal-Singularity:1.2.1:dev')
implementation('com.github.GTNewHorizons:ForestryMC:4.10.16:dev')
implementation('com.github.GTNewHorizons:MagicBees:2.9.4-GTNH:dev')
implementation('com.github.GTNewHorizons:NotEnoughItems:2.7.69-GTNH:dev')
implementation('com.github.GTNewHorizons:OpenComputers:1.11.16-GTNH:dev')
implementation('com.github.GTNewHorizons:supersolarpanels:1.1.4:dev')
implementation('com.github.GTNewHorizons:ThaumicEnergistics:1.7.11-GTNH:dev')
implementation('com.github.GTNewHorizons:Universal-Singularities:8.10.0:dev')
implementation('com.github.GTNewHorizons:WitcheryExtras:1.3.1:dev')
runtimeOnlyNonPublishable('com.github.GTNewHorizons:BetterP2P:1.3.1:dev')
runtimeOnlyNonPublishable('com.github.GTNewHorizons:Chisel:2.16.8-GTNH:dev')
runtimeOnlyNonPublishable('com.github.GTNewHorizons:StructureLib:1.4.15:dev')*/
